{"version":3,"file":"performance.js","sources":["../../../../src/performance/performance.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NgZone, ApplicationRef, InjectionToken, Inject, Optional } from '@angular/core';\nimport { Observable, Subscription, from } from 'rxjs';\nimport { first, tap, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { performance } from 'firebase/app';\nimport { FirebaseApp } from '@angular/fire';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport type TraceOptions = {\n  metrics?: {[key:string]: number},\n  attributes?: {[key:string]:string},\n  attribute$?: {[key:string]:Observable<string>},\n  incrementMetric$?: {[key:string]: Observable<number|void|null|undefined>},\n  metric$?: {[key:string]: Observable<number>}\n};\n\n@Injectable()\nexport class AngularFirePerformance {\n  \n  performance: Observable<performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(AUTOMATICALLY_TRACE_CORE_NG_METRICS) automaticallyTraceCoreNgMetrics:boolean|null,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled:boolean|null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled:boolean|null,\n    appRef: ApplicationRef,\n    private zone: NgZone\n  ) {\n    \n    // @ts-ignore zapping in the UMD in the build script\n    const requirePerformance = from(zone.runOutsideAngular(() => import('firebase/performance')));\n\n    this.performance = requirePerformance.pipe(\n      // SEMVER while < 6 need to type, drop next major\n      map(() => zone.runOutsideAngular(() => <performance.Performance>app.performance())),\n      tap(performance => {\n        if (instrumentationEnabled == false) { performance.instrumentationEnabled = false }\n        if (dataCollectionEnabled == false) { performance.dataCollectionEnabled = false }\n      }),\n      shareReplay(1)\n    );\n\n    if (automaticallyTraceCoreNgMetrics != false) {\n\n      // TODO determine more built in metrics\n      // this leaks...\n      appRef.isStable.pipe(\n        first(it => it),\n        this.traceUntilComplete('isStable')\n      ).subscribe();\n\n    }\n\n  }\n\n  trace$ = (name:string, options?: TraceOptions) =>\n    this.performance.pipe(\n      switchMap(performance =>\n        new Observable<void>(emitter =>\n          this.zone.runOutsideAngular(() => {\n            const trace = performance.trace(name);\n            options && options.metrics && Object.keys(options.metrics).forEach(metric => {\n              trace.putMetric(metric, options!.metrics![metric])\n            });\n            options && options.attributes && Object.keys(options.attributes).forEach(attribute => {\n              trace.putAttribute(attribute, options!.attributes![attribute])\n            });\n            const attributeSubscriptions = options && options.attribute$ ? Object.keys(options.attribute$).map(attribute =>\n              options!.attribute$![attribute].subscribe(next => trace.putAttribute(attribute, next))\n            ) : [];\n            const metricSubscriptions = options && options.metric$ ? Object.keys(options.metric$).map(metric =>\n              options!.metric$![metric].subscribe(next => trace.putMetric(metric, next))\n            ) : [];\n            const incrementOnSubscriptions = options && options.incrementMetric$ ? Object.keys(options.incrementMetric$).map(metric =>\n              options!.incrementMetric$![metric].subscribe(next => trace.incrementMetric(metric, next || undefined))\n            ) : [];\n            emitter.next(trace.start());\n            return { unsubscribe: () => {\n              trace.stop();\n              metricSubscriptions.forEach(m => m.unsubscribe());\n              incrementOnSubscriptions.forEach(m => m.unsubscribe());\n              attributeSubscriptions.forEach(m => m.unsubscribe());\n            }};\n          })\n        )\n      )\n    );\n\n  traceUntil = <T=any>(name:string, test: (a:T) => boolean, options?: TraceOptions & { orComplete?: boolean }) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        a  => test(a) && traceSubscription.unsubscribe(),\n        () => {},\n        () => options && options.orComplete && traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  traceWhile = <T=any>(name:string, test: (a:T) => boolean, options?: TraceOptions & { orComplete?: boolean}) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    let traceSubscription: Subscription|undefined;\n    return source$.pipe(\n      tap(\n        a  => {\n          if (test(a)) {\n            traceSubscription = traceSubscription || this.trace$(name, options).subscribe();\n          } else {\n            traceSubscription && traceSubscription.unsubscribe();\n            traceSubscription = undefined;\n          }\n        },\n        () => {},\n        () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  traceUntilComplete = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => {},\n        () => {},\n        () => traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  traceUntilFirst = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => traceSubscription.unsubscribe(),\n        () => {},\n        () => {}\n      )\n    ).subscribe(subscriber);\n  });\n\n  trace = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => traceSubscription.unsubscribe(),\n        () => {},\n        () => traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n}\n"]}